SigninLogs
| where ResultType == "0"
| extend TrustedLocation = tostring(iff(NetworkLocationDetails contains 'trustedNamedLocation', 'trustedNamedLocation',''))| distinct IPAddress, TrustedLocation, UserPrincipalName
| summarize count = count() by IPAddress, TrustedLocation


//this flags if an ip is ipv6
let timerange=30d;
SigninLogs
| where TimeGenerated > ago(timerange)
| where ResultType == "0"
| extend TrustedLocation = tostring(iff(NetworkLocationDetails contains 'trustedNamedLocation', 'trustedNamedLocation',''))
| extend isIPv6 = tostring(iff(IPAddress matches regex @"(([\d|\w]{1,4}\:){7}[\d|\w]{1,4})",'Yes','No'))
| distinct IPAddress, TrustedLocation, UserPrincipalName, isIPv6
| summarize count = count() by IPAddress, TrustedLocation, isIPv6


//exclude guest logins
let timerange=7d;
SigninLogs
| where TimeGenerated > ago(timerange)
| where ResultType == "0"
| where UserType <> "Guest"
| extend TrustedLocation = tostring(iff(NetworkLocationDetails contains 'trustedNamedLocation', 'trustedNamedLocation',''))
| extend isIPv6 = tostring(iff(IPAddress matches regex @"(([\d|\w]{1,4}\:){7}[\d|\w]{1,4})",'Yes','No'))
| distinct IPAddress, TrustedLocation, UserPrincipalName, isIPv6
| summarize count = count() by IPAddress, TrustedLocation, isIPv6

//get unique users from an IP
let ip = "10.0.0.1";
let timerange=7d;
SigninLogs
| where TimeGenerated > ago(timerange)
| where ResultType == "0"
| where UserType <> "Guest"
| extend TrustedLocation = tostring(iff(NetworkLocationDetails contains 'trustedNamedLocation', 'trustedNamedLocation',''))
| extend isIPv6 = tostring(iff(IPAddress matches regex @"(([\d|\w]{1,4}\:){7}[\d|\w]{1,4})",'Yes','No'))
| where IPAddress == ip
| distinct IPAddress, TrustedLocation, UserPrincipalName, isIPv6

